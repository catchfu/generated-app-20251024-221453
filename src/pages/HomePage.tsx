import * as React from 'react';
import { Github, Twitter } from 'lucide-react';
import { useGameStore } from '@/lib/game-store';
import { GameUI } from '@/components/game/GameUI';
import { ScoreDisplay } from '@/components/game/ScoreDisplay';
import { HowToPlayDialog } from '@/components/game/HowToPlayDialog';
import { Toaster } from '@/components/ui/sonner';
import { Button } from '@/components/ui/button';
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Leaderboard } from '@/components/game/Leaderboard';
import { PastChallenges } from '@/components/game/PastChallenges';
import { SubmitScoreDialog } from '@/components/game/SubmitScoreDialog';
export function HomePage() {
  const gameStatus = useGameStore(state => state.gameStatus);
  const error = useGameStore(state => state.error);
  const fetchDailyChallenge = useGameStore(state => state.fetchDailyChallenge);
  const activeChallenge = useGameStore(state => state.activeChallenge);
  const [activeTab, setActiveTab] = React.useState('game');
  React.useEffect(() => {
    // Fetch daily challenge only on initial load if no challenge is active
    if (!useGameStore.getState().activeChallenge) {
      useGameStore.getState().fetchDailyChallenge();
    }
  }, []);
  const handlePlayPastChallenge = () => {
    setActiveTab('game');
  };
  const renderGameContent = () => {
    if (error && gameStatus === 'error') {
      return (
        <div className="text-center text-destructive bg-destructive/10 p-6 rounded-lg">
          <h2 className="text-2xl font-bold mb-2">Oops! Something went wrong.</h2>
          <p>{error}</p>
          <Button onClick={fetchDailyChallenge} className="mt-4 bg-brand-pink hover:bg-brand-pink/90 text-primary-foreground">Try Again</Button>
        </div>
      );
    }
    switch (gameStatus) {
      case 'playing':
      case 'loading':
        return <GameUI />;
      case 'results':
        return <ScoreDisplay />;
      default:
        return <GameUI />;
    }
  };
  return (
    <div className="flex flex-col min-h-screen bg-background font-sans antialiased relative overflow-hidden">
      <div className="absolute inset-0 -z-10 h-full w-full bg-brand-off-white bg-[radial-gradient(#e5e7eb_1px,transparent_1px)] [background-size:16px_16px]"></div>
      <div className="absolute top-0 left-0 w-full h-full bg-[radial-gradient(circle_at_top,_rgba(225,61,141,0.15),_transparent_40%)] -z-10" />
      <div className="absolute bottom-0 right-0 w-full h-full bg-[radial-gradient(circle_at_bottom,_rgba(74,63,107,0.15),_transparent_40%)] -z-10" />
      <header className="relative z-20">
        <HowToPlayDialog />
      </header>
      <main className="flex-grow flex flex-col items-center justify-center p-4 z-10">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 w-full">
          <div className="py-8 md:py-10 lg:py-12 text-center">
            <h1 className="font-display text-6xl md:text-8xl text-brand-purple drop-shadow-sm mb-12">
              Promptle
            </h1>
            <Tabs value={activeTab} onValueChange={setActiveTab} className="w-full max-w-4xl mx-auto">
              <TabsList className="grid w-full grid-cols-3 mb-6 bg-brand-purple/10">
                <TabsTrigger value="game">Today's Game</TabsTrigger>
                <TabsTrigger value="leaderboard">Leaderboard</TabsTrigger>
                <TabsTrigger value="archive">Past Challenges</TabsTrigger>
              </TabsList>
              <TabsContent value="game">
                {activeChallenge && (
                  <h2 className="text-2xl font-semibold text-brand-purple mb-4">
                    Challenge for {new Date(activeChallenge.date).toLocaleDateString()}
                  </h2>
                )}
                {renderGameContent()}
              </TabsContent>
              <TabsContent value="leaderboard">
                <Leaderboard />
              </TabsContent>
              <TabsContent value="archive">
                <PastChallenges onPlayChallenge={handlePlayPastChallenge} />
              </TabsContent>
            </Tabs>
          </div>
        </div>
      </main>
      <footer className="w-full py-6 px-4 sm:px-6 lg:px-8 text-center text-muted-foreground z-10">
        <div className="flex justify-center items-center space-x-4 mb-2">
          <a href="https://github.com/cloudflare" target="_blank" rel="noopener noreferrer" className="hover:text-brand-pink transition-colors">
            <Github />
          </a>
          <a href="https://twitter.com/cloudflare" target="_blank" rel="noopener noreferrer" className="hover:text-brand-pink transition-colors">
            <Twitter />
          </a>
        </div>
        <p className="text-sm">
          Built with ❤️ at Cloudflare. Images generated by AI.
        </p>
        <p className="text-xs mt-1">
          Note: AI server requests are subject to rate limits across all user apps.
        </p>
      </footer>
      <Toaster richColors closeButton theme="light" />
      <SubmitScoreDialog />
    </div>
  );
}